# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      sudo npm install -g snyk
      snyk auth '1ed7be28-f5b8-4815-9ea9-384fe9b9ccaa'
      snyk code test 
      snyk code monitor
  displayName: "Snyk Code Test"
  
- task: OwaspZapScan@2
  inputs:
    ZapApiUrl: 'http://l27.0.0.1:8080'
    ZapApiKey: 'uitlgip34id33pcbnk7v1tpjsk'
    TargetUrl: 'http://google.com'
    ExecuteSpiderScan: true
     steps:
  - task: CmdLine@2
    inputs:
      script: 'chmod 777 -R $(Build.ArtifactStagingDirectory)'
    displayName: "Set chmod permissions for ArtifactStagingDirectory"
  
  - script: |
      wget  -O $(Build.ArtifactStagingDirectory)/ZapTransform.ps1 "https://raw.githubusercontent.com/UKHO/owasp-zap-scan/master/src/ZapTransform.ps1"
    displayName: "Download ZapTransform.ps1 to ArtifactStagingDirectory"  
    
  - script: |
      wget  -O $(Build.ArtifactStagingDirectory)/ZapTransformTemplate.xslt "https://raw.githubusercontent.com/UKHO/owasp-zap-scan/master/src/ZapTransformTemplate.xslt"
    displayName: "Download ZapTransformTemplate.xslt to ArtifactStagingDirectory"      

  - task: CmdLine@2
    inputs:
      script: 'docker run --rm --mount type=bind,source=$(Build.ArtifactStagingDirectory),target=/zap/wrk/ -t owasp/zap2docker-stable zap-api-scan.py -t ${{ parameters.swaggerDefUrl }} -f ${{ parameters.definitionFormat }} -g gen.conf -r OWASP-Zap-Report.html -x Report.xml || true'
    continueOnError: true
    displayName: "Run OWASP ZAP API Scan"

  - task: CmdLine@2
    inputs:
      script:  docker run --rm --mount type=bind,source=$(Build.ArtifactStagingDirectory),target=/tmp/nunit/ --mount type=bind,source=$(Build.ArtifactStagingDirectory),target=/tmp/report/ mcr.microsoft.com/powershell:ubuntu-18.04 pwsh -File '/tmp/nunit/ZapTransform.ps1'
    displayName: "Create Nunit Test Report"

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'NUnit'
      testResultsFiles: 'Converted-OWASP-ZAP-Report.xml'
      searchFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: "Publish OWASP ZAP API Test Report"

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/OWASP-Zap-Report.html'
      ArtifactName: 'Owasp Zap HTML Report'
      publishLocation: 'Container'
    displayName: "Publish OWASP ZAP API HTML Report"

  - task: CmdLine@2
    inputs:
      script: 'chmod 755 -R $(Build.ArtifactStagingDirectory)'
    displayName: "Revert chmod permissions for ArtifactStagingDirectory"